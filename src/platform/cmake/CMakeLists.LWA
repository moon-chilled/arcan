#
# Expects:
#  PLATFORM_ROOT
#
# Defines:
#  arcan_lwa (new target executable)

# Lightweight arcan is a regular arcan build where we configure an
# audio/video/input platform that uses arcan-shmif rather than the
# regular platform configuration.
#
# When audio is refactored in the same platform/etc. structure as was
# done with video and agp, we'll have a soft- version with just basic
# resampling (already here) and basic mixing (already here) and get rid
# of the licensing pollution and overhead.
#

if ("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
	set(GORILLA_BUILDTYPE debug)
else()
	set(GORILLA_BUILDTYPE release)
endif()

ExternalProject_Add(Gorillarcan
	SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/gac
	GIT_REPOSITORY "${EXTERNAL_SRC_DIR}/git/gorilla-audio"
	CONFIGURE_COMMAND ""
	UPDATE_COMMAND ""
	INSTALL_COMMAND ""
	BUILD_IN_SOURCE 1
	BUILD_COMMAND "${EXTMAKE_CMD}"
	MODE=${GORILLA_BUILDTYPE}
	CC=${CMAKE_C_COMPILER}
	-C
	${CMAKE_CURRENT_BINARY_DIR}/gac
	ENABLE_ARCAN=1

	ENABLE_XAUDIO2=0
	ENABLE_PULSEAUDIO=0
	ENABLE_ALSA=0
	ENABLE_OSS=0
	ENABLE_OPENAL=0

	ARCAN_LWA_BUILD=1
	ARCAN_LWA_CFLAGS=-I${ARCAN_SHMIF_INCLUDE_DIR}
	BUILD_DYNAMIC=0

	${EXTERNAL_DEFS})


set(LWA_LIBRARIES
	${LWA_LIBRARIES} ${CMAKE_CURRENT_BINARY_DIR}/gac/o/${GORILLA_BUILDTYPE}/libgorilla.a
)

set(LWA_INCLUDES
	${CMAKE_CURRENT_BINARY_DIR}/gac/include
	${INCLUDE_DIRS}
)

add_executable(arcan_lwa
	${SOURCES}
	${AGP_SOURCES}
	${LWA_PLATFORM}
	${PLATFORM_ROOT}/arcan/video.c
)

add_sanitizers(arcan_lwa)

if (${VIDEO_PLATFORM} MATCHES "egl-dri")
	set_property(SOURCE ${PLATFORM_ROOT}/arcan/video.c
		APPEND PROPERTY COMPILE_DEFINITIONS EGL_DMA_BUF)
endif()

add_dependencies(Gorillarcan arcan_shmif_int)
add_dependencies(arcan_lwa arcan_shmif_int arcan_shmif_intext Gorillarcan ${MAIN_DEPS})
if(STATIC_FREETYPE)
	add_dependencies(arcan_lwa Freetype)
endif()

target_compile_definitions(arcan_lwa PRIVATE
	ARCAN_LWA
	${ARCAN_DEFINITIONS}
)

target_include_directories(arcan_lwa PRIVATE ${INCLUDE_DIRS})
target_link_libraries(arcan_lwa
	${STDLIB}
	${ARCAN_LIBRARIES}
	${AGP_LIBRARIES}
	${LWA_LIBRARIES}
	${VIDEO_LIBRARIES}
	arcan_shmif_int
	arcan_shmif_intext
)

if (ARCAN_LNK_FLAGS)
set_property(TARGET arcan_lwa APPEND PROPERTY LINK_FLAGS ${ARCAN_LNK_FLAGS})
endif()

target_compile_definitions(arcan_lwa PRIVATE
	FRAMESERVER_MODESTRING=\"${FRAMESERVER_MODESTRING}\")

install(TARGETS arcan_lwa DESTINATION bin)
